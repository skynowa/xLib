/****************************************************************************
* Class name:  CxCom
* Description: COM
* File name:   CxCom.cpp
* Author:      skynowa
* E-mail:      skynowa@gmail.com
* Created:     10.12.2009 15:27:35
*
*****************************************************************************/


#include <xLib/Common/Win/CxCom.h>


LONG CxCom::_ms_lInitCount = 0;

/****************************************************************************
*    Public methods                                                          
*                                                                            
*****************************************************************************/

//---------------------------------------------------------------------------
//DONE: CxCom (�����������)
CxCom::CxCom(EConcurrencyModel cmCoModel/* = cmMultiThreaded*/) :
    _m_ulConModel(static_cast<ULONG>(cmCoModel))
{
    /*DEBUG*/// n/a ?

    ////xCHECK_DO(TRUE == CxCom::bIsInit(cmCoModel), return);

    //--HRESULT hrRes = S_FALSE;
    //--hrRes = ::CoInitializeEx(NULL, _m_ulConModel);
    //--/*DEBUG*/xASSERT_DO(S_OK == hrRes || RPC_E_CHANGED_MODE == hrRes, return);

    if (0 == _ms_lInitCount ++) {
        HRESULT hrRes = ::CoInitializeEx(NULL, _m_ulConModel);
        /*DEBUG*/xASSERT_DO(SUCCEEDED(hrRes), return);
    }
}
//---------------------------------------------------------------------------
//DONE: ~CxCom (����������)
CxCom::~CxCom() {
    //--::CoUninitialize(); 
    //--/*DEBUG*/// n/a

    if (0 == -- _ms_lInitCount) {
        ::CoUninitialize(); 
        /*DEBUG*/// n/a
    }
}
//---------------------------------------------------------------------------


/****************************************************************************
*    Static methods                                                          
*                                                                            
*****************************************************************************/

//---------------------------------------------------------------------------
//TODO: - bIsInit ()
/*static*/
BOOL CxCom::bIsInit() {
    /*DEBUG*/// n/a
    
    return (_ms_lInitCount > 0);
}
//---------------------------------------------------------------------------








/****************************************************************************
*    Protected methods                                                       
*                                                                            
*****************************************************************************/

//---------------------------------------------------------------------------




/****************************************************************************
*    Private methods                                                         
*                                                                            
*****************************************************************************/

//---------------------------------------------------------------------------
