#include <windows.h>
#include <iostream>
#include <stdio.h>
#include <string>
#include <vector>
#include <map>

#include <XLib/xassert.h>
//---------------------------------------------------------------------------
BOOL                                    g_bRes    = FALSE;
INT                                     g_iRes    = - 1;
UINT                                    g_uiRes   = 0;
ULONG                                   g_ulRes   = 0;
ULONGLONG                               g_ullRes  = 0UL;
HANDLE                                  g_hRes    = INVALID_HANDLE_VALUE;
HWND                                    g_hwndRes = NULL;
std::string                             g_sRes    = "";
std::vector<std::string>                g_vecsRes; 
std::map<std::string, std::string>      g_mapsRes;
std::multimap<std::string, std::string> g_mmsRes; 

#define PRINT(method, result) std::cout << method << ":    " << result << std::endl
//---------------------------------------------------------------------------
INT main(int argc, char* argv[]) {
	/****************************************************************************
	* [...тест...]
	*
	*****************************************************************************/


	//-------------------------------------
	//[FUNCTION_NAME]
	{
		std::string sTestData[][2] = {
				{"TEST_STRING_1",		 "MUST_BE_1"},
				{"TEST_STRING_2",		 "MUST_BE_2"},
				{"TEST_STRING_3",		 "MUST_BE_3"},
				{"TEST_STRING_4",		 "MUST_BE_4"}
		};

		for (size_t i = 0; i < ARRAYSIZE(sTestData); ++ i) {
			std::string sStr1 = [FUNCTION_NAME](sTestData[i][0]);
			std::string sStr2 = [FUNCTION_NAME](sTestData[i][1]);
			XASSERT(sStr1 == sStr2);

			std::string sStr3 = [FUNCTION_NAME](sTestData[i][0]);
			std::string sStr4 = sTestData[i][1];
			XASSERT(sStr3 == sStr4);
		}
	}


    std::cout << std::endl << std::endl;
	//system("pause");
	return 0;
}
//---------------------------------------------------------------------------