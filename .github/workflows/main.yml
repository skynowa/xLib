# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    # runs-on: windows-2019

    steps:
      # - name: Upgrade
        # run: sudo apt update && sudo apt upgrade

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install - Libs
        run: cd ./Tools && ./install_libs.sh

      # - name: Install - Static Analysis
        # run: cd ./Tools && ./install_cppcheck.sh && ./install_clang_tidy.sh && ./install_pvs_studio.sh

      - name: Checkout - CMakeLib
        uses: actions/checkout@v2
        with:
          repository: skynowa/CMakeLib
          path: CMakeLib

      - name: Install - CMakeLib
        run: cd ./CMakeLib && ./install.sh

      - name: Configure - xLib
        run: cd ./Build && ./eclipse.sh

      - name: Build - xLib
        run: cd ./Build && ./build.sh

  build_windows:
    # The type of runner that the job will run on
    runs-on: windows-2019

    steps:
      # - name: Upgrade
        # run: sudo apt update && sudo apt upgrade

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # - name: Install - Static Analysis
        # run: cd ./Tools && ./install_cppcheck.sh && ./install_clang_tidy.sh && ./install_pvs_studio.sh

      - name: Checkout - CMakeLib
        uses: actions/checkout@v2
        with:
          repository: skynowa/CMakeLib
          path: CMakeLib

      - name: Install - CMakeLib
        run: cd ./CMakeLib && ./install.sh

      - name: Configure - xLib
        run: cd ./Build && ./eclipse.sh

      - name: Build - xLib
        run: cd ./Build && ./build.sh
