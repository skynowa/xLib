#--------------------------------------------------------------------------------------------------
# \file  main.yml
# \brief
#
# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
#--------------------------------------------------------------------------------------------------


name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        # - {
        #     name: "Ubuntu-20.04 (GCC)",
        #     os: ubuntu-20.04,
        #     build_type: "Debug",
        #     compiler: "g++",
        #     cc: "gcc",
        #     cxx: "g++"
        #   }
        # - {
        #     name: "Ubuntu-20.04 (Clang)",
        #     os: ubuntu-20.04,
        #     build_type: "Debug",
        #     compiler: "clang++",
        #     cc: "clang",
        #     cxx: "clang++"
        #   }
        - {
            name: "Windows-2019 (MSVC)",
            os: windows-2019,
            build_type: "Debug",
            compiler: "g++",
            cc: "gcc",
            cxx: "g++"
            # environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
          }
        # - {
        #     name: "macOS Latest Clang",
        #     os: macos-latest,
        #     build_type: "Debug",
        #     compiler: "clang++",
        #     cc: "clang",
        #     cxx: "clang++"
        #   }

    steps:
      ##############################################################################################
      # Cancel
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{github.token}}

      # - name: Trace-1
      #   run: cat "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
      #   shell: bash

      ##############################################################################################
      # xLib-data
      - name: xLib-data - Checkout
        uses: actions/checkout@v2
        with:
          repository: skynowa/xLib-data
          path: ${{github.workspace}}/xLib-data

      ##############################################################################################
      # CMakeLib
      - name: CMakeLib - Checkout
        uses: actions/checkout@v2
        with:
          repository: skynowa/CMakeLib
          path: ${{github.workspace}}/CMakeLib

      - name: CMakeLib - Install
        run: cd "${{github.workspace}}/CMakeLib" && ./install.sh
        shell: bash

      ##############################################################################################
      # xLib
      # Checkout
      - name: xLib - Checkout
        uses: actions/checkout@v2
        with:
          repository: skynowa/xLib
          path: ${{github.workspace}}/xLib

      # Env
      - name: Compiler Env
        run: |
          echo "CXX=${{ matrix.config.compiler }}" >> $GITHUB_ENV
        shell: bash

      - name: Conan install
        run: |
          pip install conan
        shell: bash

      # Libs (CURL)
      - name: Libs (CURL) - Install
        run: cd "${{github.workspace}}/xLib/Tools" && ./curl_install.sh
        shell: bash

      # Libs
      - name: Libs - Install
        run: conan install "${{github.workspace}}/xLib" --build=missing
        # run: cd "${{github.workspace}}/xLib/Tools" && ./install_libs.sh
        shell: bash

      ##
      - name: Trace-1
        run: echo "github.workspace - ${{github.workspace}}" && ls -la
        shell: bash

      # - name: Trace
      #   # run: cat "C:/Program Files/CMake/share/cmake-3.21/Modules/FindCURL.cmake"
      #   run: locate curl.h
      #   shell: bash

      - name: xLib - Configure
        run: cd "${{github.workspace}}/xLib/Build" && ./eclipse.sh
        shell: bash

      - name: xLib - Build
        run: cd "${{github.workspace}}/xLib/Build" && ./build.sh
        shell: bash

      # - name: xLib - Unit Tests (optional)
      #   run: "${{github.workspace}}/xLib_eclipse/Tests/System/Test_ProcessInfo"

      - name: xLib - Tests
        run: cd "${{github.workspace}}/xLib/Build" && ./tests.sh
        shell: bash
