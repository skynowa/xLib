#--------------------------------------------------------------------------------------------------
# \file  main.yml
# \brief
#
# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
# https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/adding-a-workflow-status-badge
# https://github.com/sdras/awesome-actions#github-tools-and-management
# https://github.com/marketplace
#
# Win:
# - https://docs.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-170
#--------------------------------------------------------------------------------------------------


name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        # - {
        #     name: "Ubuntu-20.04 (GCC)",
        #     os: ubuntu-20.04,
        #     cc: "gcc",
        #     cxx: "g++",
        #     gen_script: "./gen_eclipse.sh"
        #     gen_tests_script: "./gen_tests_eclipse.sh"
        #   }
        # - {
        #     name: "Ubuntu-20.04 (Clang)",
        #     os: ubuntu-20.04,
        #     cc: "clang",
        #     cxx: "clang++",
        #     gen_script: "./gen_eclipse.sh"
        #     gen_tests_script: "./gen_tests_eclipse.sh"
        #   }

        - {
            name: "Windows-2019 (MSVC)",
            os: windows-2019,
            cc: "cl",
            cxx: "cl",
            gen_script: "./gen_msvc2019.sh",
            gen_tests_script: "./gen_tests_msvc2019.sh",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat" ### vcvars32.bat
          }

        # - {
        #     name: "Windows-2019 (MinGW)",
        #     os: windows-2019,
        #     cc: "gcc",
        #     cxx: "g++",
        #     gen_script: "./gen_eclipse.sh"
        #   }
        # - {
        #     name: "MacOS-10.15 (Clang)",
        #     os: macos-10.15,
        #     cc: "clang",
        #     cxx: "clang++",
        #     gen_script: "./gen_eclipse.sh"
        #     gen_tests_script: "./gen_tests_eclipse.sh"
        #   }

    steps:
      ##############################################################################################
      # Cancel
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{github.token}}

      # GITHUB_ENV
      - name: GITHUB_ENV
        run: |
          echo "OS: $(uname -s)"
          echo "CMake version: $(cmake --version)"
          echo ""
          echo "CC=${{ matrix.config.cc }}"   >> $GITHUB_ENV
          echo "CXX=${{ matrix.config.cxx }}" >> $GITHUB_ENV

          ${{ matrix.config.environment_script }}
        shell: bash

      - name: Conan install
        run: |
          pip install ninja

          pip install conan
          pip install conan --upgrade
        shell: bash

      - name: Conan - Setup
        run: |
          CC="${{ matrix.config.cc }}"
          CXX="${{ matrix.config.cxx }}"

          conan --version

          conan profile new default --detect --force
          conan profile list
          conan profile show default
        shell: bash

      ##############################################################################################
      # xLib-data
      - name: xLib-data - Checkout
        uses: actions/checkout@v2
        with:
          repository: skynowa/xLib-data
          path: ${{github.workspace}}/xLib-data

      ##############################################################################################
      # CMakeLib
      - name: CMakeLib - Checkout
        uses: actions/checkout@v2
        with:
          repository: skynowa/CMakeLib
          path: ${{github.workspace}}/CMakeLib

      - name: CMakeLib - Install
        run: cd "${{github.workspace}}/CMakeLib" && ./install.sh
        shell: bash

      ##############################################################################################
      # xLib
      # Checkout
      - name: xLib - Checkout
        uses: actions/checkout@v2
        with:
          repository: skynowa/xLib
          path: ${{github.workspace}}/xLib

      # Libs (Extra)
      - name: Libs (Extra) - Install
        run: >-
            conan install "${{github.workspace}}/xLib"
            --profile "${{github.workspace}}/xLib/conan_profile_win.txt"
            --build=missing
        shell: bash

      # Libs (libx11-xcb-dev)
      - name: Libs (libx11-xcb-dev) - Install
        if: matrix.config.cxx != 'cl'
        run: sudo apt-get install -y --no-install-recommends libx11-xcb-dev
        shell: bash

      # Trace (github.workspace)
      - name: Trace - github.workspace
        run: echo "github.workspace - ${{github.workspace}}" && ls -la
        shell: bash

      # # Trace (conaninfo.txt)
      # - name: Trace - conaninfo.txt
      #   run: cat conaninfo.txt
      #   shell: bash

      # # Trace (conanbuildinfo.txt)
      # - name: Trace - conanbuildinfo.txt
      #   run: cat conanbuildinfo.txt
      #   shell: bash

      # Trace (conan_paths.cmake)
      - name: Trace - conan_paths.cmake
        run: cat conan_paths.cmake
        shell: bash

      # xLib (Generate)
      - name: xLib - Generate
        run: cd "${{github.workspace}}/xLib/Build" && ${{ matrix.config.gen_script }}
        shell: bash

      # xLib (Build)
      - name: xLib - Build
        run: cd "${{github.workspace}}/xLib/Build" && ./build.sh
        shell: bash

      # Trace (xLib_build)
      - name: Trace - xLib_build
        run: cd "${{github.workspace}}/xLib_build" && ls -la
        shell: bash

      # Trace (xLib_build / Release)
      - name: Trace - xLib_build/Release
        run: cd "${{github.workspace}}/xLib_build/Release" && ls -la
        shell: bash

      # xLib (Deploy)
      - name: xLib - Deploy
        run: cd "${{github.workspace}}/xLib/Build" && ./deploy.sh
        shell: bash

      # xLib - Tests (Generate)
      - name: xLib - Tests (Generate)
        run: cd "${{github.workspace}}/xLib/Build" && ${{ matrix.config.gen_tests_script }}
        shell: bash

      # xLib - Tests
      - name: xLib - Tests
        run: cd "${{github.workspace}}/xLib/Build" && ./tests.sh
        shell: bash

      # Trace (xLib_tests_build)
      - name: Trace - xLib_tests_build
        run: cd "${{github.workspace}}/xLib_tests_build" && ls -la
        shell: bash

      # Trace (xLib_tests_build / Release)
      - name: Trace - xLib_build / Release
        run: cd "${{github.workspace}}/xLib_tests_build/Release" && ls -la
        shell: bash
