/**
 * \file  ILog.cpp
 * \brief logging
 */


#include "ILog.h"


namespace xl::log
{

/**************************************************************************************************
*    public
*
**************************************************************************************************/

//-------------------------------------------------------------------------------------------------
/* virtual */
ILog::~ILog()
{
}
//-------------------------------------------------------------------------------------------------
void_t
ILog::setEnabled(
    cbool_t a_flag
)
{
    _isEnable = a_flag;
}
//-------------------------------------------------------------------------------------------------
void_t
ILog::writeLine(
	cLevel           a_level,
	std::ctstring_t &a_msg
) const
{
	write(a_level, a_msg + Const::nl());
}
//-------------------------------------------------------------------------------------------------


/**************************************************************************************************
*    protected
*
**************************************************************************************************/

//-------------------------------------------------------------------------------------------------
std::tstring_t
ILog::_levelString(
    cLevel a_level
) const
{
	std::tstring_t sRv;

	switch (a_level) {
	case Level::Off:
		sRv = xT("Off");
		break;
	case Level::Trace:
		sRv = xT("Trace");
		break;
	case Level::Debug:
		sRv = xT("Debug");
		break;
	case Level::Info:
		sRv = xT("Info");
		break;
	case Level::Warning:
		sRv = xT("Warning");
		break;
	case Level::Error:
		sRv = xT("Error");
		break;
	case Level::Critical:
		sRv = xT("Critical");
		break;
	}

	return sRv;
}
//-------------------------------------------------------------------------------------------------

} // namespace
