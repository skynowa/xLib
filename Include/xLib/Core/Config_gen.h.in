/**
 * \file  Config_gen.h
 * \brief configurations for xLib
 */


#pragma once

//-------------------------------------------------------------------------------------------------
///@name project type: executable binary, static library, share (dynamic-link) library
///@{
#cmakedefine cmOPTION_PROJECT_HEADER_ONLY 1
#cmakedefine cmOPTION_PROJECT_LIB_STATIC 1
#cmakedefine cmOPTION_PROJECT_LIB_SHARE 1
#cmakedefine cmOPTION_PROJECT_LIB_MODULE 1
///@}

#cmakedefine cmOPTION_BUILD_MSG 1
    ///< build message

///@name debug mode (only one mode can be activated)
///@{
// log mode (only one mode can be activated)
#cmakedefine cmOPTION_DEBUG_MODE_MSGBOX 1
    ///< debug mode "message box"
#cmakedefine cmOPTION_DEBUG_MODE_STDOUT 1
    ///< debug mode "std::cout"
#cmakedefine cmOPTION_DEBUG_MODE_LOG 1
    ///< debug mode "logging"
#cmakedefine cmOPTION_DEBUG_MODE_STDOUT_LOG 1
    ///< debug mode "std::cout and log"
#cmakedefine cmOPTION_DEBUG_MODE_EXCEPTION 1
    ///< debug mode "no debugging"
#cmakedefine cmOPTION_DEBUG_MODE_NO 1
    ///< debug mode "no debugging"
///@}

///@name tests
///@{
#cmakedefine cmOPTION_TEST_PRIVATE 1
    ///< for tests private data
#cmakedefine cmOPTION_TEST_TRACING 1
    ///< use tracing in tests
///@}

//-------------------------------------------------------------------------------------------------
///@name Git information
///@{
#cmakedefine cmGIT_REVISION_FOUND 1
#cmakedefine cmGIT_REVISION_BRANCH xT("@cmGIT_REVISION_BRANCH@")
#cmakedefine cmGIT_REVISION_HASH xT("@cmGIT_REVISION_HASH@")
///@}

///@name detecting features
///@{
#cmakedefine cmOPENSSL_CRYPTO_FOUND 1
#cmakedefine cmPR_SET_DUMPABLE_FOUND 1
#cmakedefine cmRLIMIT_CORE_FOUND 1
#cmakedefine cmPT_DENY_ATTACH_FOUND 1
#cmakedefine cmSCHED_GETCPU_FOUND 1
#cmakedefine cmGETCPU_FOUND 1
#cmakedefine cmGETLOGIN_R_FOUND 1
#cmakedefine cmGNU_GET_LIBC_FOUND 1
#cmakedefine cmCS_GNU_LIBPTHREAD_VERSION_FOUND 1
#cmakedefine cmSCHED_SETAFFINITY_FOUND 1
#cmakedefine cmGETSID_FOUND 1
#cmakedefine cmGETPWUID_R_FOUND 1
#cmakedefine cmSETMNTENT_FOUND 1
#cmakedefine cmGETMNTENT_R_FOUND 1
#cmakedefine cmENDMNTENT_FOUND 1
#cmakedefine cmRAND_R_FOUND 1
#cmakedefine cmSRANDOM_R_FOUND 1
#cmakedefine cmRANDOM_R_FOUND 1

#cmakedefine cmMYSQL_FOUND 1
#cmakedefine cmEXECINFO_FOUND 1
#cmakedefine cmXCB_FOUND 1
#cmakedefine cmADDR2LINE_FOUND 1
#cmakedefine cmADDR2LINE_FILE_PATH xT("@cmADDR2LINE_FILE_PATH@")
///@}

//-------------------------------------------------------------------------------------------------
///@name OS specific defines
///@{
#if   xENV_WIN
    #if xCOMPILER_MS
        #include <SDKDDKVer.h>
    #endif

    #if !defined(WIN32_LEAN_AND_MEAN)
        #define WIN32_LEAN_AND_MEAN 1
    #endif
        ///< exclude APIs such as Cryptography, DDE, RPC, Shell, Windows Sockets
    #if !defined(STRICT)
        #undef  NO_STRICT
        #define STRICT 1
    #endif
        ///< type checking
    #define _CRT_SECURE_NO_WARNINGS 1
        ///< disable Win CRT warnings
    #define _SCL_SECURE_NO_WARNINGS 1
        ///< disable Win SCL warnings
    #define _CRT_SECURE_NO_DEPRECATE 1
        ///< don't complain about all the deprecated functions

    #if   xCOMPILER_MINGW
        //
    #elif xCOMPILER_MS
        // Disable warnings
        #pragma warning(disable: 4996) // function or variable may be unsafe (deprecated)
        #pragma warning(disable: 4355) // 'this' : used in base member initializer list
        #pragma warning(disable: 4101) // 'e' : unreferenced local variable

        #if !defined(VC_EXTRALEAN)
            #define VC_EXTRALEAN 1
        #endif
            ///< exclude rarely-used stuff from Windows headers
    #elif xCOMPILER_CODEGEAR
        // Disable warnings
        #pragma option -w-8027  // function not expanded inline
        #pragma option -w-8057  // parameter is never used
        #pragma option -w-8058  // cannot create pre-compiled header: initialized data in header
        #pragma option -w-8004  // is assigned a value that is never used
        #pragma option -w-8008  // Condition is always true
    #elif xCOMPILER_CLANG
        //
    #endif
#elif xENV_UNIX
    #if !defined(_GNU_SOURCE)
        #define _GNU_SOURCE 1
    #endif
#endif
///@}

//-------------------------------------------------------------------------------------------------
